generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Relationship {
  id         Int           @id @default(autoincrement())
  sender     User          @relation("senderRelation", fields: [senderId], references: [id])
  receiver   User          @relation("receiverRelation", fields: [receiverId], references: [id])
  senderId   Int
  receiverId Int
  kind       RelationKind?
  @@unique([senderId, receiverId])
}

model Channel {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  password          String?
  kind              ChannelKind
  createdAt         DateTime            @default(now())
  channelConnection ChannelConnection[] @relation
  messages          Message[]           @relation
}

model ChannelConnection {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  channel   Channel     @relation(fields: [channelId], references: [id])
  userId    Int
  channelId Int
  role      ChannelRole
  muted     DateTime? 
  createdAt DateTime    @default(now())
  @@unique([userId, channelId])
}

model Message {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  body      String
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
  createdAt DateTime @default(now())
}

model User {
  id                Int                 @id @unique
  username          String				@unique
  avatar            String
  twoFAEnabled      Boolean             @default(false)
  totpKey           String?
  createdAt         DateTime            @default(now())
  channelConnection ChannelConnection[] @relation
  invites           Relationship[]      @relation("senderRelation")
  invited           Relationship[]      @relation("receiverRelation")
  messages          Message[]			@relation
}

enum ChannelRole {
  OWNER
  ADMIN
  DEFAULT
  INVITED
  BANNED
}

enum ChannelKind {
  DIRECT
  PROTECTED
  PRIVATE
  PUBLIC
}

enum RelationKind {
  FRIENDS
  INVITE
  BLOCKED
}
